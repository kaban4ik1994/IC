@using System.Web.Optimization
@using IC.UI.Models
@model IC.UI.Models.StudentEditViewModel

@{
    ViewBag.Title = Model.StudentId == 0 ? "Create Student" : "Edit Student";
}

<section id="edit-form">
    @using (Html.BeginForm("Edit", "Student", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.StudentId)
        @Html.HiddenFor(model => model.Login)
        @Html.HiddenFor(model => model.Password)



        <div id="dropdowns">
            @Html.Partial("_DropdownsPartial", Model)
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(x => x.FirstName)
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(x => x.MiddleName)
                @Html.EditorFor(model => model.MiddleName)
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(x => x.LastName)
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(x => x.YearOfEntrance)
                @Html.DropDownListFor(model => model.YearOfEntrance, Model.YearOfEntrances, new { @class = "form-control input-lg" })
            </div>
        </div>

        <br />

        <div class="form-group text-right">
            <a class="btn btn-success" href="@Url.Action("Delete", "Student", new { id =Model.StudentId })" role="button">Remove this student</a>
            <input type="submit" class="btn btn-success" value="Save" />

        </div>
    }
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function refrechContent() {
            $.get('@Url.Action("DropDowns", "Student")'
                + '?courseId=' + $('#course').val()
                + '&specialtyId=' + $('#specialty').val()
                + '&groupId=' + $('#group').val(), function (data) {
                    $('#dropdowns').html($(data));

                });
        };
    </script>
}


